# function names cannot begin with uppercase letters.

# Functions in Haskell dont have to be in any particular order.
  Is not like in C that they have to define somewhere up before calling.

# if a function doesnt take any parameters, it is a definition(or a name).
  cus they are not changable.
  afunction = "function definition"

# Function application (calling a function by putting a space after it and then
  typing out the parameters) has the highest precedence of them all. 
  Both of the following are equal : 
  succ 9 + max 5 4 + 1
  (succ 9) + (max 5 4) + 1

  succ 9 * 10 -- is 10 * 10 = 100
  succ (9 * 10) -- is 91

# Functions also have types. When writing our on functions, we can choose to give 
  them an explicit tpye declaration.
  addThree :: Int -> Int -> Int -> Int

# return type is the last item in the declaration.
