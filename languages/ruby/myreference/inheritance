#!/usr/bin/ruby

# In object-oriented programming, Inheritance is the evil forest.
# Experienced programmers know to avoid this evil 
# because they know that deep inside the Dark Forest Inheritance is the Evil Queen Multiple Inheritance.
# She likes to eat software and programmers with her massive complexity teeth, chewing on the flesh of the fallen.
# But the forest is so powerful and so tempting that nearly every programmer has to go into it,
# and try to make it out alive with the Evil Queen's head before they can call themselves real programmers.
# You just can't resist the Inheritance Forest's pull, so you go in.
# After the adventure you learn to just stay out of that stupid forest and bring an army if you are ever forced to go in again.

class Parent

  def override()
    puts "PARENT override()"
  end

  def implicit()
    puts "PARENT implicit()"
  end

  def altered()
    puts "PARENT altered()"
  end
end

class Child < Parent

  def override()
    puts "CHILD override()"
  end

  def altered()
    puts "CHILD, BEFORE PARENT altered()"
    super()
    puts "CHILD, AFTER PARENT altered()"
  end
end

dad = Parent.new()
son = Child.new()

dad.implicit()
son.implicit()

dad.override()
son.override()

dad.altered()
son.altered()
